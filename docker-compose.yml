version: '2'

# Yandex.Cloud external IP with DDoS Protection enabled has a requirement of MTU of 1450
# according to https://github.com/moby/moby/issues/22297#issuecomment-242934050 that's the only way to set it inside docker-compose
networks:
    default:
        driver: bridge

services:
    nginx:
        build: ./config/nginx
        hostname: nginx
        container_name: nginx-gcom
        image: paskal/nginx:latest
        depends_on:
            - php
        ports:
            - "80:80"
            - "443:443"

        volumes:
            - ./web/prod:/web/prod
            - ./web/tmp:/web/tmp
            - ./web/reports:/web/reports
            - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./config/nginx/bitrix.conf:/etc/nginx/bitrix.conf:ro
            - ./config/nginx/fastcgi.conf:/etc/nginx/fastcgi.conf:ro
            - ./config/nginx/security_headers.conf:/etc/nginx/security_headers.conf:ro
            - ./config/nginx/conf.d:/etc/nginx/conf.d:ro
            - /etc/letsencrypt:/etc/nginx/letsencrypt:ro
            # Logs
            - ./logs/nginx:/var/log/nginx
        environment:
            - TZ=Etc/UTC

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    php:
        build:
            context: ./config/php
            dockerfile: Dockerfile.8.2
        image: paskal/bitrix-php:8.2
        hostname: php
        container_name: php-gcom
        depends_on:
            - memcached
            - memcached-sessions
        expose:
            - "9000"
        volumes:
            - ./web/prod:/web/prod
            - ./web/dev:/web/dev
            - ./private/msmtprc:/etc/msmtprc
            # MySQL socket to prevent transferring data through TCP
            - ./private/mysqld:/var/run/mysqld
            # Logs
            - ./logs/php:/var/log/php
            # configuration
            - ./config/php/90-php.ini:/etc/php/8.2/fpm/conf.d/90-php.ini
            # for monitoring purposes
            - ./logs/nginx:/var/log/nginx

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    php-cron:
        command: cron -f
        image: paskal/bitrix-php:8.2
        hostname: php-cron
        container_name: php-cron-gcom
        depends_on:
            - memcached
            - memcached-sessions
        volumes:
            - ./web/prod:/web/prod
            - ./web/dev:/web/dev
            - ./private/msmtprc:/etc/msmtprc
            # MySQL socket to prevent transferring data through TCP
            - ./private/mysqld:/var/run/mysqld
            # configuration
            - ./config/php/90-php.ini:/etc/php/8.2/cli/conf.d/90-php.ini
            # Cronjobs
            - ./config/cron/php-cron.cron:/etc/cron.d/tasks:ro

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    mysql:
        image: percona/percona-server:8.0
        hostname: mysql
        container_name: mysql-gcom
        # MYSQL_ROOT_PASSWORD, MYSQL_USER, MYSQL_PASSWORD
        env_file: private/environment/mysql.env
        expose:
            - "3306"
        ports:
            - "127.0.0.1:3306:3306"
        volumes:
            # Configuration
            - ./config/mysql/my.cnf:/etc/my.cnf.d/my.cnf
            # Data persistence
            - ./private/mysql-data:/var/lib/mysql
            # MySQL socket to prevent transferring data through TCP
            # do chown 1001:1001 ./private/mysqld
            - ./private/mysqld:/var/mysql-socket
            - ./private/migrations:/migrations
            # Logs
            - ./logs/mysql:/var/log/mysql
        environment:
            MYSQL_DATABASE: gciocom
            TZ: Etc/UTC
        cap_add:
            - SYS_NICE # CAP_SYS_NICE

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    memcached:
        image: memcached:1-alpine
        hostname: memcached
        container_name: memcached-gcom
        restart: unless-stopped
        expose:
            - "11211"

    memcached-sessions:
        image: memcached:1-alpine
        hostname: memcached-sessions
        container_name: memcached-sessions-gcom
        restart: unless-stopped
        expose:
            - "11211"
